# - Find HAPI
# Find the native HAPI headers and libraries.
#
#  HAPI_INCLUDE_DIR -  where to find HAPI.h, etc.
#  HAPI_LIBRARIES    - List of libraries when using HAPI.
#  HAPI_FOUND        - True if HAPI found.


# Look for the header file.
FIND_PATH(HAPI_INCLUDE_DIR NAMES HAPI/HAPI.h 
                           PATHS $ENV{H3D_ROOT}/../HAPI/include
                           ../../HAPI/include)
MARK_AS_ADVANCED(HAPI_INCLUDE_DIR)


# Look for the library.
IF(MSVC70 OR MSVC71)
  SET( HAPI_NAME HAPI_vc7 )
ELSEIF(MSVC80)
  SET( HAPI_NAME HAPI_vc8 )
ELSEIF(MSCV90)
  SET( HAPI_NAME HAPI_vc9 )
ELSE(MSCV90)
  SET( HAPI_NAME HAPI )
ENDIF(MSVC70 OR MSVC71)

FIND_LIBRARY(HAPI_LIBRARY NAMES ${HAPI_NAME}
                          PATHS $ENV{H3D_ROOT}/../lib
                                ../../lib)
MARK_AS_ADVANCED(HAPI_LIBRARY)

# Copy the results to the output variables.
IF(HAPI_INCLUDE_DIR AND HAPI_LIBRARY)
  SET(HAPI_FOUND 1) 
  SET(HAPI_LIBRARIES optimized ${HAPI_LIBRARY} debug ${HAPI_NAME}_d)
  SET(HAPI_INCLUDE_DIRS ${HAPI_INCLUDE_DIR})
ELSE(HAPI_INCLUDE_DIR AND HAPI_LIBRARY)
  SET(HAPI_FOUND 0)
  SET(HAPI_LIBRARIES)
  SET(HAPI_INCLUDE_DIRS)
ENDIF(HAPI_INCLUDE_DIR AND HAPI_LIBRARY)

# Report the results.
IF(NOT HAPI_FOUND)
  SET(HAPI_DIR_MESSAGE
    "HAPI was not found. Make sure HAPI_LIBRARY and HAPI_INCLUDE_DIR are set.")
  IF(NOT HAPI_FIND_QUIETLY)
    MESSAGE(STATUS "${HAPI_DIR_MESSAGE}")
  ELSE(NOT HAPI_FIND_QUIETLY)
    IF(HAPI_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "${HAPI_DIR_MESSAGE}")
    ENDIF(HAPI_FIND_REQUIRED)
  ENDIF(NOT HAPI_FIND_QUIETLY)
ENDIF(NOT HAPI_FOUND)
