# - Find H3DUtil
# Find the native H3DUTIL headers and libraries.
#
#  H3DUTIL_INCLUDE_DIR -  where to find H3DUtil.h, etc.
#  H3DUTIL_LIBRARIES    - List of libraries when using H3DUtil.
#  H3DUTIL_FOUND        - True if H3DUtil found.


# Look for the header file.
FIND_PATH(H3DUTIL_INCLUDE_DIR NAMES H3DUtil/H3DUtil.h)
MARK_AS_ADVANCED(H3DUTIL_INCLUDE_DIR)

# Look for the library.
FIND_LIBRARY(H3DUTIL_LIBRARY NAMES H3DUtil)
MARK_AS_ADVANCED(H3DUTIL_LIBRARY)

# Copy the results to the output variables.
IF(H3DUTIL_INCLUDE_DIR AND H3DUTIL_LIBRARY)
  SET(H3DUTIL_FOUND 1)
  SET(H3DUTIL_LIBRARIES ${H3DUTIL_LIBRARY})
  SET(H3DUTIL_INCLUDE_DIRS ${H3DUTIL_INCLUDE_DIR})
ELSE(H3DUTIL_INCLUDE_DIR AND H3DUTIL_LIBRARY)
  SET(H3DUTIL_FOUND 0)
  SET(H3DUTIL_LIBRARIES)
  SET(H3DUTIL_INCLUDE_DIRS)
ENDIF(H3DUTIL_INCLUDE_DIR AND H3DUTIL_LIBRARY)

# Report the results.
IF(NOT H3DUTIL_FOUND)
  SET(H3DUTIL_DIR_MESSAGE
    "H3DUTIL was not found. Make sure H3DUTIL_LIBRARY and H3DUTIL_INCLUDE_DIR are set.")
  IF(NOT H3DUTIL_FIND_QUIETLY)
    MESSAGE(STATUS "${H3DUTIL_DIR_MESSAGE}")
  ELSE(NOT H3DUTIL_FIND_QUIETLY)
    IF(H3DUTIL_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "${H3DUTIL_DIR_MESSAGE}")
    ENDIF(H3DUTIL_FIND_REQUIRED)
  ENDIF(NOT H3DUTIL_FIND_QUIETLY)
ENDIF(NOT H3DUTIL_FOUND)
